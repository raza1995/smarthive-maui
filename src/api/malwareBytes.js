import axios from "axios";
import moment from "moment";

import { malwareByteApiUrls, malwareBytesEndPoints } from "../utils/constants";
import { errorHandler } from "../utils/errorHandler";

require("dotenv").config();

const malwareBytesApi = axios.create({
  baseURL: malwareBytesEndPoints,
});

export const getMalwareBytesDetectionsApi = (
  baseURL,
  token,
  account_ids,
  next_cursor
) =>
  axios
    .post(
      `${baseURL}/${malwareByteApiUrls.detections}`,
      {
        account_ids,
        start_date: moment().subtract(60, "d"),
        end_date: new Date(),
        page_size: 2000,
        next_cursor,
      },
      {
        headers: {
          authorization: `Bearer ${token}`,
        },
      }
    )
    .catch((error) => {
      errorHandler(error);
    })
    .then((res) => res);
export const getMalwareBytesQuarantineApi = (
  baseURL,
  token,
  account_id,
  next_cursor
) => {
  let params = {};
  if (next_cursor) {
    params = { next_cursor };
  }
  return axios
    .get(`${baseURL}/v1/accounts/${account_id}/quarantine`, {
      headers: {
        authorization: `Bearer ${token}`,
      },
      params,
    })
    .catch((error) => {
      console.log(error.message);
    })
    .then((res) => res);
};
export const getMalwareBytesSuspiciousActivityApi = (
  baseURL,
  token,
  account_id,
  next_cursor
) => {
  let params = {
    since: moment().subtract(60, "d").format(),
  };
  if (next_cursor) {
    params = { next_cursor };
  }
  return axios
    .get(`${baseURL}/v1/accounts/${account_id}/sa`, {
      headers: {
        authorization: `Bearer ${token}`,
      },
      params,
    })
    .catch((error) => {
      errorHandler(error);
    })
    .then((res) => res);
};

export const getMalwareBytesEventsApi = (
  baseURL,
  token,
  account_id,
  next_cursor
) => {
  let params = {
    start_date: moment().subtract(60, "d"),
    end_date: new Date(),
  };
  if (next_cursor) {
    params = { next_cursor };
  }
  return axios
    .get(`${baseURL}/v1/accounts/${account_id}/events`, {
      headers: {
        authorization: `Bearer ${token}`,
      },
      params,
    })
    .catch((error) => {
      errorHandler(error);
    })
    .then((res) => res);
};

export const getMalwareBytesJobsApi = (
  baseURL,
  token,
  account_ids,
  next_cursor
) =>
  axios
    .post(
      `${baseURL}/${malwareByteApiUrls.jobs}`,
      {
        account_ids,
        // start_date: moment().subtract(60, 'd'),
        // end_date: new Date(),
        next_cursor,
      },
      {
        headers: {
          authorization: `Bearer ${token}`,
        },
      }
    )
    .catch((error) => {
      errorHandler(error);
    })
    .then((res) => res);

export const getMalwareBytesGroupsApi = (
  baseURL,
  token,
  account_id,
  next_cursor
) =>
  axios
    .get(
      `${baseURL}/${malwareByteApiUrls.groups}/${account_id}/groups`,
      {
        headers: {
          authorization: `Bearer ${token}`,
        },
      },
      {
        next_cursor,
      }
    )
    .catch((error) => {
      errorHandler(error);
    })
    .then((res) => res);

export const getMalwareBytesPoliciesApi = (
  baseURL,
  token,
  account_id,
  next_cursor
) =>
  axios
    .get(
      `${baseURL}/${malwareByteApiUrls.policies}`,
      {
        headers: {
          authorization: `Bearer ${token}`,
        },
      },
      {
        next_cursor,
      }
    )
    .catch((error) => {
      errorHandler(error);
    })
    .then((res) => res);

export const getMalwareBytesStatusApi = (baseURL, token, account_id, item_id) =>
  axios
    .get(`${baseURL}/v1/accounts/${account_id}/endpoints/${item_id}/status`, {
      headers: {
        authorization: `Bearer ${token}`,
      },
    })
    .catch((error) => {
      console.log(error.message);
      return {};
    })
    .then((res) => res.data);

export const getMalwareBytesEndpointAssetsApi = (
  baseURL,
  token,
  account_id,
  item_id
) =>
  axios
    .get(`${baseURL}/v1/accounts/${account_id}/endpoints/${item_id}/assets`, {
      headers: {
        authorization: `Bearer ${token}`,
      },
    })
    .catch((error) => {
      console.log(error.message);
      return {};
    })
    .then((res) => res.data);

export const getMalwareBytesOsPatchesApi = (
  baseURL,
  token,
  account_ids,
  next_cursor
) =>
  axios
    .post(
      `${baseURL}/${malwareByteApiUrls.osPatches}`,
      {
        account_ids,
        next_cursor,
      },
      {
        headers: {
          authorization: `Bearer ${token}`,
        },
      }
    )
    .catch((error) => {
      errorHandler(error);
    })
    .then((res) => res);

export const issueAJobMalwarebyte = (baseURL, token, account_id, payload) =>
  malwareBytesApi
    .post(
      `${baseURL}/v1/accounts/${account_id}/jobs`,
      {
        ...payload,
      },
      {
        headers: {
          authorization: `Bearer ${token}`,
        },
      }
    )
    .catch((error) => {
      console.log("asdasdasd", error.message);
      return {};
    })
    .then((res) => res.data);

export const getMalwareBytesCveApi = (
  baseURL,
  token,
  account_ids,
  next_cursor
) =>
  axios
    .post(
      `${baseURL}/${malwareByteApiUrls.cve}`,
      {
        account_ids,
        page_size: 500,
        next_cursor,
      },
      {
        headers: {
          authorization: `Bearer ${token}`,
        },
      }
    )
    .catch((error) => {
      errorHandler(error);
    })
    .then((res) => res);

export default malwareBytesApi;
